class Solution {
    public boolean find132pattern(int[] nums) {
        int third = Integer.MIN_VALUE;  // Initialize the third element as the smallest possible value.
        Stack<Integer> stack = new Stack<>();  // Create a stack to keep track of potential "132 pattern" elements.

        // Iterate through the array in reverse order.
        for (int i = nums.length - 1; i >= 0; i--) {
            int currentNumber = nums[i];

            // If the current number is smaller than the "third" element, we've found a valid "132 pattern."
            if (currentNumber < third) {
                return true;
            }

            // Update the "third" element and pop elements from the stack if they're smaller than the current number.
            while (!stack.isEmpty() && stack.peek() < currentNumber) {
                third = stack.pop();
            }

            // Push the current number onto the stack for potential future comparisons.
            stack.push(currentNumber);
        }

        // If no "132 pattern" is found during the loop, return false.
        return false;
    }
}
